package client

import (
	"context"
	"strings"
	"text/template"
	"github.com/ecadlabs/gotez/v2/protocol"
)

// Code generated by generate.go DO NOT EDIT.

var path_BlockHeader = template.Must(template.New("path").Parse("/chains/{{.Chain}}/blocks/{{.Block}}/header{{with .Metadata}}?metadata={{.}}{{end}}"))

func (client *Client) BlockHeader(ctx context.Context, r *BlockRequest) (*protocol.BlockHeaderInfo, error) {
	tmp := *r
	if tmp.Chain == "" {
		tmp.Chain = client.Chain
	}

	var path strings.Builder
	if err := path_BlockHeader.Execute(&path, &tmp); err != nil {
		return nil, err
	}

	var response protocol.BlockHeaderInfo
	if err := client.request("GET", path.String(), &response, ctx); err != nil {
		return nil, err
	}
	return &response, nil
}

var path_Block = template.Must(template.New("path").Parse("/chains/{{.Chain}}/blocks/{{.Block}}{{with .Metadata}}?metadata={{.}}{{end}}"))

func (client *Client) Block(ctx context.Context, r *BlockRequest) (*protocol.BlockInfo, error) {
	tmp := *r
	if tmp.Chain == "" {
		tmp.Chain = client.Chain
	}

	var path strings.Builder
	if err := path_Block.Execute(&path, &tmp); err != nil {
		return nil, err
	}

	var response protocol.BlockInfo
	if err := client.request("GET", path.String(), &response, ctx); err != nil {
		return nil, err
	}
	return &response, nil
}

