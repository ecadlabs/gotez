package proto_018_Proxford

import "encoding/json"

// Code generated by genmarshaller.go DO NOT EDIT.

func (self *DoubleAttestationEvidence) MarshalJSON() ([]byte, error) {
	type DoubleAttestationEvidence_no_json_marshaller DoubleAttestationEvidence

	type json_DoubleAttestationEvidence struct {
		Marker0 any `json:"kind"`
		*DoubleAttestationEvidence_no_json_marshaller
	}

	tmp := json_DoubleAttestationEvidence {
		Marker0: self.OperationKind(),
		DoubleAttestationEvidence_no_json_marshaller: (*DoubleAttestationEvidence_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *Attestation) MarshalJSON() ([]byte, error) {
	type Attestation_no_json_marshaller Attestation

	type json_Attestation struct {
		Marker0 any `json:"kind"`
		*Attestation_no_json_marshaller
	}

	tmp := json_Attestation {
		Marker0: self.OperationKind(),
		Attestation_no_json_marshaller: (*Attestation_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *DoubleBakingEvidence) MarshalJSON() ([]byte, error) {
	type DoubleBakingEvidence_no_json_marshaller DoubleBakingEvidence

	type json_DoubleBakingEvidence struct {
		Marker0 any `json:"kind"`
		*DoubleBakingEvidence_no_json_marshaller
	}

	tmp := json_DoubleBakingEvidence {
		Marker0: self.OperationKind(),
		DoubleBakingEvidence_no_json_marshaller: (*DoubleBakingEvidence_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *DoublePreattestationEvidence) MarshalJSON() ([]byte, error) {
	type DoublePreattestationEvidence_no_json_marshaller DoublePreattestationEvidence

	type json_DoublePreattestationEvidence struct {
		Marker0 any `json:"kind"`
		*DoublePreattestationEvidence_no_json_marshaller
	}

	tmp := json_DoublePreattestationEvidence {
		Marker0: self.OperationKind(),
		DoublePreattestationEvidence_no_json_marshaller: (*DoublePreattestationEvidence_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *Preattestation) MarshalJSON() ([]byte, error) {
	type Preattestation_no_json_marshaller Preattestation

	type json_Preattestation struct {
		Marker0 any `json:"kind"`
		*Preattestation_no_json_marshaller
	}

	tmp := json_Preattestation {
		Marker0: self.OperationKind(),
		Preattestation_no_json_marshaller: (*Preattestation_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *IncreasePaidStorageSuccessfulManagerResult) MarshalJSON() ([]byte, error) {
	type IncreasePaidStorageSuccessfulManagerResult_no_json_marshaller IncreasePaidStorageSuccessfulManagerResult

	type json_IncreasePaidStorageSuccessfulManagerResult struct {
		Marker0 any `json:"kind"`
		*IncreasePaidStorageSuccessfulManagerResult_no_json_marshaller
	}

	tmp := json_IncreasePaidStorageSuccessfulManagerResult {
		Marker0: self.OperationKind(),
		IncreasePaidStorageSuccessfulManagerResult_no_json_marshaller: (*IncreasePaidStorageSuccessfulManagerResult_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *OriginationSuccessfulManagerResult) MarshalJSON() ([]byte, error) {
	type OriginationSuccessfulManagerResult_no_json_marshaller OriginationSuccessfulManagerResult

	type json_OriginationSuccessfulManagerResult struct {
		Marker0 any `json:"kind"`
		*OriginationSuccessfulManagerResult_no_json_marshaller
	}

	tmp := json_OriginationSuccessfulManagerResult {
		Marker0: self.OperationKind(),
		OriginationSuccessfulManagerResult_no_json_marshaller: (*OriginationSuccessfulManagerResult_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *OriginationInternalOperationResult) MarshalJSON() ([]byte, error) {
	type OriginationInternalOperationResult_no_json_marshaller OriginationInternalOperationResult

	type json_OriginationInternalOperationResult struct {
		Marker0 any `json:"kind"`
		*OriginationInternalOperationResult_no_json_marshaller
	}

	tmp := json_OriginationInternalOperationResult {
		Marker0: self.OperationKind(),
		OriginationInternalOperationResult_no_json_marshaller: (*OriginationInternalOperationResult_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *SmartRollupOriginateSuccessfulManagerResult) MarshalJSON() ([]byte, error) {
	type SmartRollupOriginateSuccessfulManagerResult_no_json_marshaller SmartRollupOriginateSuccessfulManagerResult

	type json_SmartRollupOriginateSuccessfulManagerResult struct {
		Marker0 any `json:"kind"`
		*SmartRollupOriginateSuccessfulManagerResult_no_json_marshaller
	}

	tmp := json_SmartRollupOriginateSuccessfulManagerResult {
		Marker0: self.OperationKind(),
		SmartRollupOriginateSuccessfulManagerResult_no_json_marshaller: (*SmartRollupOriginateSuccessfulManagerResult_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *Transaction) MarshalJSON() ([]byte, error) {
	type Transaction_no_json_marshaller Transaction

	type json_Transaction struct {
		Marker0 any `json:"kind"`
		*Transaction_no_json_marshaller
	}

	tmp := json_Transaction {
		Marker0: self.OperationKind(),
		Transaction_no_json_marshaller: (*Transaction_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *TransactionSuccessfulManagerResult) MarshalJSON() ([]byte, error) {
	type TransactionSuccessfulManagerResult_no_json_marshaller TransactionSuccessfulManagerResult

	type json_TransactionSuccessfulManagerResult struct {
		Marker0 any `json:"kind"`
		*TransactionSuccessfulManagerResult_no_json_marshaller
	}

	tmp := json_TransactionSuccessfulManagerResult {
		Marker0: self.OperationKind(),
		TransactionSuccessfulManagerResult_no_json_marshaller: (*TransactionSuccessfulManagerResult_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *TransactionInternalOperationResult) MarshalJSON() ([]byte, error) {
	type TransactionInternalOperationResult_no_json_marshaller TransactionInternalOperationResult

	type json_TransactionInternalOperationResult struct {
		Marker0 any `json:"kind"`
		*TransactionInternalOperationResult_no_json_marshaller
	}

	tmp := json_TransactionInternalOperationResult {
		Marker0: self.OperationKind(),
		TransactionInternalOperationResult_no_json_marshaller: (*TransactionInternalOperationResult_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

