package big_map

import "encoding/json"

// Code generated by genmarshaller.go DO NOT EDIT.

func (self *Update) MarshalJSON() ([]byte, error) {
	type Update_no_json_marshaller Update

	type json_Update struct {
		Marker0 any `json:"action"`
		Update_no_json_marshaller
	}

	tmp := json_Update {
		Marker0: self.BigMapDiffOp(),
		Update_no_json_marshaller: Update_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *Remove) MarshalJSON() ([]byte, error) {
	type Remove_no_json_marshaller Remove

	type json_Remove struct {
		Marker0 any `json:"action"`
		Remove_no_json_marshaller
	}

	tmp := json_Remove {
		Marker0: self.BigMapDiffOp(),
		Remove_no_json_marshaller: Remove_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *Copy) MarshalJSON() ([]byte, error) {
	type Copy_no_json_marshaller Copy

	type json_Copy struct {
		Marker0 any `json:"action"`
		Copy_no_json_marshaller
	}

	tmp := json_Copy {
		Marker0: self.BigMapDiffOp(),
		Copy_no_json_marshaller: Copy_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *Alloc) MarshalJSON() ([]byte, error) {
	type Alloc_no_json_marshaller Alloc

	type json_Alloc struct {
		Marker0 any `json:"action"`
		Alloc_no_json_marshaller
	}

	tmp := json_Alloc {
		Marker0: self.BigMapDiffOp(),
		Alloc_no_json_marshaller: Alloc_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

