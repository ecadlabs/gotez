package core

import "encoding/json"

// Code generated by genmarshaller.go DO NOT EDIT.

func (self *OperationResultApplied[T]) MarshalJSON() ([]byte, error) {
	type OperationResultApplied_no_json_marshaller OperationResultApplied[T]

	type json_OperationResultApplied struct {
		Marker0 any `json:"status"`
		OperationResultApplied_no_json_marshaller
	}

	tmp := json_OperationResultApplied {
		Marker0: self.Status(),
		OperationResultApplied_no_json_marshaller: OperationResultApplied_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *OperationResultBacktracked[T]) MarshalJSON() ([]byte, error) {
	type OperationResultBacktracked_no_json_marshaller OperationResultBacktracked[T]

	type json_OperationResultBacktracked struct {
		Marker0 any `json:"status"`
		OperationResultBacktracked_no_json_marshaller
	}

	tmp := json_OperationResultBacktracked {
		Marker0: self.Status(),
		OperationResultBacktracked_no_json_marshaller: OperationResultBacktracked_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *OperationResultFailed) MarshalJSON() ([]byte, error) {
	type OperationResultFailed_no_json_marshaller OperationResultFailed

	type json_OperationResultFailed struct {
		Marker0 any `json:"status"`
		OperationResultFailed_no_json_marshaller
	}

	tmp := json_OperationResultFailed {
		Marker0: self.Status(),
		OperationResultFailed_no_json_marshaller: OperationResultFailed_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *OperationResultSkipped) MarshalJSON() ([]byte, error) {
	type OperationResultSkipped_no_json_marshaller OperationResultSkipped

	type json_OperationResultSkipped struct {
		Marker0 any `json:"status"`
		OperationResultSkipped_no_json_marshaller
	}

	tmp := json_OperationResultSkipped {
		Marker0: self.Status(),
		OperationResultSkipped_no_json_marshaller: OperationResultSkipped_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *TestChainStatusForking) MarshalJSON() ([]byte, error) {
	type TestChainStatusForking_no_json_marshaller TestChainStatusForking

	type json_TestChainStatusForking struct {
		Marker0 any `json:"status"`
		TestChainStatusForking_no_json_marshaller
	}

	tmp := json_TestChainStatusForking {
		Marker0: self.TestChainStatus(),
		TestChainStatusForking_no_json_marshaller: TestChainStatusForking_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *TestChainStatusRunning) MarshalJSON() ([]byte, error) {
	type TestChainStatusRunning_no_json_marshaller TestChainStatusRunning

	type json_TestChainStatusRunning struct {
		Marker0 any `json:"status"`
		TestChainStatusRunning_no_json_marshaller
	}

	tmp := json_TestChainStatusRunning {
		Marker0: self.TestChainStatus(),
		TestChainStatusRunning_no_json_marshaller: TestChainStatusRunning_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *BalanceUpdateOriginBlockApplication) MarshalJSON() ([]byte, error) {
	type BalanceUpdateOriginBlockApplication_no_json_marshaller BalanceUpdateOriginBlockApplication

	type json_BalanceUpdateOriginBlockApplication struct {
		Marker0 any `json:"origin"`
		BalanceUpdateOriginBlockApplication_no_json_marshaller
	}

	tmp := json_BalanceUpdateOriginBlockApplication {
		Marker0: self.BalanceUpdateOrigin(),
		BalanceUpdateOriginBlockApplication_no_json_marshaller: BalanceUpdateOriginBlockApplication_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *BalanceUpdateOriginProtocolMigration) MarshalJSON() ([]byte, error) {
	type BalanceUpdateOriginProtocolMigration_no_json_marshaller BalanceUpdateOriginProtocolMigration

	type json_BalanceUpdateOriginProtocolMigration struct {
		Marker0 any `json:"origin"`
		BalanceUpdateOriginProtocolMigration_no_json_marshaller
	}

	tmp := json_BalanceUpdateOriginProtocolMigration {
		Marker0: self.BalanceUpdateOrigin(),
		BalanceUpdateOriginProtocolMigration_no_json_marshaller: BalanceUpdateOriginProtocolMigration_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *BalanceUpdateOriginSubsidy) MarshalJSON() ([]byte, error) {
	type BalanceUpdateOriginSubsidy_no_json_marshaller BalanceUpdateOriginSubsidy

	type json_BalanceUpdateOriginSubsidy struct {
		Marker0 any `json:"origin"`
		BalanceUpdateOriginSubsidy_no_json_marshaller
	}

	tmp := json_BalanceUpdateOriginSubsidy {
		Marker0: self.BalanceUpdateOrigin(),
		BalanceUpdateOriginSubsidy_no_json_marshaller: BalanceUpdateOriginSubsidy_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *BalanceUpdateOriginSimulation) MarshalJSON() ([]byte, error) {
	type BalanceUpdateOriginSimulation_no_json_marshaller BalanceUpdateOriginSimulation

	type json_BalanceUpdateOriginSimulation struct {
		Marker0 any `json:"origin"`
		BalanceUpdateOriginSimulation_no_json_marshaller
	}

	tmp := json_BalanceUpdateOriginSimulation {
		Marker0: self.BalanceUpdateOrigin(),
		BalanceUpdateOriginSimulation_no_json_marshaller: BalanceUpdateOriginSimulation_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

func (self *BalanceUpdateOriginDelayedOperation) MarshalJSON() ([]byte, error) {
	type BalanceUpdateOriginDelayedOperation_no_json_marshaller BalanceUpdateOriginDelayedOperation

	type json_BalanceUpdateOriginDelayedOperation struct {
		Marker0 any `json:"origin"`
		BalanceUpdateOriginDelayedOperation_no_json_marshaller
	}

	tmp := json_BalanceUpdateOriginDelayedOperation {
		Marker0: self.BalanceUpdateOrigin(),
		BalanceUpdateOriginDelayedOperation_no_json_marshaller: BalanceUpdateOriginDelayedOperation_no_json_marshaller(*self),
	}

	return json.Marshal(tmp)
}

