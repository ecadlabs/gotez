package core

import "encoding/json"

// Code generated by genmarshaller.go DO NOT EDIT.

func (self *TestChainStatusForking) MarshalJSON() ([]byte, error) {
	type TestChainStatusForking_no_json_marshaller TestChainStatusForking

	type json_TestChainStatusForking struct {
		Marker0 any `json:"status"`
		*TestChainStatusForking_no_json_marshaller
	}

	tmp := json_TestChainStatusForking {
		Marker0: self.TestChainStatus(),
		TestChainStatusForking_no_json_marshaller: (*TestChainStatusForking_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *TestChainStatusRunning) MarshalJSON() ([]byte, error) {
	type TestChainStatusRunning_no_json_marshaller TestChainStatusRunning

	type json_TestChainStatusRunning struct {
		Marker0 any `json:"status"`
		*TestChainStatusRunning_no_json_marshaller
	}

	tmp := json_TestChainStatusRunning {
		Marker0: self.TestChainStatus(),
		TestChainStatusRunning_no_json_marshaller: (*TestChainStatusRunning_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *OperationResultApplied[T]) MarshalJSON() ([]byte, error) {
	type OperationResultApplied_no_json_marshaller OperationResultApplied[T]

	type json_OperationResultApplied struct {
		Marker0 any `json:"status"`
		*OperationResultApplied_no_json_marshaller
	}

	tmp := json_OperationResultApplied {
		Marker0: self.Status(),
		OperationResultApplied_no_json_marshaller: (*OperationResultApplied_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *OperationResultBacktracked[T]) MarshalJSON() ([]byte, error) {
	type OperationResultBacktracked_no_json_marshaller OperationResultBacktracked[T]

	type json_OperationResultBacktracked struct {
		Marker0 any `json:"status"`
		*OperationResultBacktracked_no_json_marshaller
	}

	tmp := json_OperationResultBacktracked {
		Marker0: self.Status(),
		OperationResultBacktracked_no_json_marshaller: (*OperationResultBacktracked_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *OperationResultFailed) MarshalJSON() ([]byte, error) {
	type OperationResultFailed_no_json_marshaller OperationResultFailed

	type json_OperationResultFailed struct {
		Marker0 any `json:"status"`
		*OperationResultFailed_no_json_marshaller
	}

	tmp := json_OperationResultFailed {
		Marker0: self.Status(),
		OperationResultFailed_no_json_marshaller: (*OperationResultFailed_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

func (self *OperationResultSkipped) MarshalJSON() ([]byte, error) {
	type OperationResultSkipped_no_json_marshaller OperationResultSkipped

	type json_OperationResultSkipped struct {
		Marker0 any `json:"status"`
		*OperationResultSkipped_no_json_marshaller
	}

	tmp := json_OperationResultSkipped {
		Marker0: self.Status(),
		OperationResultSkipped_no_json_marshaller: (*OperationResultSkipped_no_json_marshaller)(self),
	}

	return json.Marshal(&tmp)
}

